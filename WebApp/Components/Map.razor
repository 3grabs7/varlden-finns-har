@using BingMapsRESTToolkit
@using System.Drawing
@using System.Drawing.Imaging
@inject Repositories.IRegistrationOfInterestRepository RegistrationsRepo

<h3>Map</h3>
@if (img != null)
{
    <img src="data:image/jpg:base64, @img" />
}

@code {

    private byte[] img { get; set; }

    private IEnumerable<Municipality> Municipalities { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await UpdateMap();
    }

    private async Task UpdateMap()
    {
        var registrations = await RegistrationsRepo.GetAllAsync();
        Municipalities = registrations.Select(r => r.Municipality);

        List<ImageryPushpin> pushPins = new();
        foreach (var municipality in Municipalities)
        {
            pushPins.Add(new ImageryPushpin
            {
                Location = new Coordinate(municipality.Latitude, municipality.Longitude),
                IconStyle = 20
            });
        }

        var request = new ImageryRequest()
        {
            CenterPoint = new Coordinate(45, -110),
            ZoomLevel = 12,
            ImagerySet = ImageryType.AerialWithLabels,
            Pushpins = pushPins,
            BingMapsKey = "AutrKGRcdTh5K45 - pjRZimsGy0Vz8qkJdcmvLl1SaS0l6j3JgSx - gBA70W01kqPb"
        };

        using (var imageStream = await ServiceManager.GetImageAsync(request))
        {
            img = Image.FromStream(imageStream).RawFormat.Guid.ToByteArray();
        }

    }
}
